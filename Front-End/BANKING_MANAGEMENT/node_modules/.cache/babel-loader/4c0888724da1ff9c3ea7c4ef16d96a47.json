{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WasimBasha\\\\Desktop\\\\Repo\\\\Batch-1B-Project\\\\Front-End\\\\BANKING_MANAGEMENT\\\\src\\\\screens\\\\customers\\\\MakeTrans.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CustFundTransfer } from \"../../actions/customerActions/customerAction\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerFundTransfer = props => {\n  _s();\n\n  const cust = JSON.parse(sessionStorage.getItem(\"customer\"));\n  const [senderAccountNo, setSenderAccountNo] = useState(cust.savingsAccount.accountNumber);\n  const [reciverAccountNo, setReciverAccountNo] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const FundTrans = useSelector(store => store.FundTrans);\n  const {\n    loading,\n    error,\n    response\n  } = FundTrans;\n  toast.configure();\n  const dispatch = useDispatch(); // const accno = JSON.parse(cust).savingsAccount.accountNumber;\n\n  const clearForm = () => {\n    setReciverAccountNo(\"\");\n    setAmount(\"\");\n  };\n\n  const onTransfer = () => {\n    if (amount > 0) {\n      dispatch(CustFundTransfer(senderAccountNo, reciverAccountNo, amount));\n    } else {\n      toast.error(\"Enter Proper Amount To Transfer\", {\n        autoClose: 1000\n      });\n      clearForm();\n    }\n  };\n\n  useEffect(() => {\n    if (response === \"Transaction done Successfully\") {\n      // sessionStorage.setItem(\"customer\", JSON.stringify(response));\n      //alert(\"Success: Transaction successful..!!\");\n      toast.success(\"Transaction successful..!!\", {\n        autoClose: 2000\n      });\n      clearForm(); //<Redirect to=\"/custhome\" />;\n    } else if (response !== \"Transaction done Successfully\") {\n      //alert(response.error);\n      toast.error(response, {\n        autoClose: 3000\n      });\n    } //else if (error) {\n    //   //alert(error);\n    //   toast.error(\"Transaction Fail\", {\n    //     autoClose: 1500,\n    //   });\n    // }\n\n  }, [loading, error, response]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-white\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-white bg-white text-dark\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Fund Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Your Account Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setSenderAccountNo(e.target.value);\n              },\n              className: \"form-control\",\n              value: cust.savingsAccount.accountNumber,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Beneficiary Account Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setReciverAccountNo(e.target.value);\n              },\n              className: \"form-control\",\n              value: reciverAccountNo,\n              placeholder: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Amount \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              onChange: e => {\n                setAmount(e.target.value);\n              },\n              className: \"form-control\",\n              value: amount,\n              placeholder: \"Enter Amount\",\n              min: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onTransfer,\n              className: \"btn btn-success float-right\",\n              children: \"Transfer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerFundTransfer, \"kTx2p71AWEgQKZ2wSMcV2Gp7/aY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CustomerFundTransfer;\nexport default CustomerFundTransfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerFundTransfer\");","map":{"version":3,"sources":["C:/Users/WasimBasha/Desktop/Repo/Batch-1B-Project/Front-End/BANKING_MANAGEMENT/src/screens/customers/MakeTrans.js"],"names":["useState","useEffect","Container","Card","useDispatch","useSelector","CustFundTransfer","toast","CustomerFundTransfer","props","cust","JSON","parse","sessionStorage","getItem","senderAccountNo","setSenderAccountNo","savingsAccount","accountNumber","reciverAccountNo","setReciverAccountNo","amount","setAmount","FundTrans","store","loading","error","response","configure","dispatch","clearForm","onTransfer","autoClose","success","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CustFundTransfer } from \"../../actions/customerActions/customerAction\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst CustomerFundTransfer = (props) => {\r\n  const cust = JSON.parse(sessionStorage.getItem(\"customer\"));\r\n  const [senderAccountNo, setSenderAccountNo] = useState(\r\n    cust.savingsAccount.accountNumber\r\n  );\r\n  const [reciverAccountNo, setReciverAccountNo] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const FundTrans = useSelector((store) => store.FundTrans);\r\n  const { loading, error, response } = FundTrans;\r\n  toast.configure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const accno = JSON.parse(cust).savingsAccount.accountNumber;\r\n\r\n  const clearForm = () => {\r\n    setReciverAccountNo(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  const onTransfer = () => {\r\n    if (amount > 0) {\r\n      dispatch(CustFundTransfer(senderAccountNo, reciverAccountNo, amount));\r\n    } else {\r\n      toast.error(\"Enter Proper Amount To Transfer\", { autoClose: 1000 });\r\n      clearForm();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response === \"Transaction done Successfully\") {\r\n      // sessionStorage.setItem(\"customer\", JSON.stringify(response));\r\n      //alert(\"Success: Transaction successful..!!\");\r\n      toast.success(\"Transaction successful..!!\", { autoClose: 2000 });\r\n      clearForm();\r\n      //<Redirect to=\"/custhome\" />;\r\n    } else if (response !== \"Transaction done Successfully\") {\r\n      //alert(response.error);\r\n      toast.error(response, {\r\n        autoClose: 3000,\r\n      });\r\n    } //else if (error) {\r\n    //   //alert(error);\r\n    //   toast.error(\"Transaction Fail\", {\r\n    //     autoClose: 1500,\r\n    //   });\r\n    // }\r\n  }, [loading, error, response]);\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"text-white\">\r\n        <Card className={\"border border-white bg-white text-dark\"}>\r\n          <Card.Header>Fund Transfer</Card.Header>\r\n          <Card.Body>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Your Account Number</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setSenderAccountNo(e.target.value);\r\n                }}\r\n                className=\"form-control\"\r\n                value={cust.savingsAccount.accountNumber}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Beneficiary Account Number</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setReciverAccountNo(e.target.value);\r\n                }}\r\n                className=\"form-control\"\r\n                value={reciverAccountNo}\r\n                placeholder=\"0\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Amount </label>\r\n              <input\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  setAmount(e.target.value);\r\n                }}\r\n                className=\"form-control\"\r\n                value={amount}\r\n                placeholder=\"Enter Amount\"\r\n                min={0}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <button\r\n                onClick={onTransfer}\r\n                className=\"btn btn-success float-right\"\r\n              >\r\n                Transfer\r\n              </button>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerFundTransfer;\r\n"]},"metadata":{},"sourceType":"module"}
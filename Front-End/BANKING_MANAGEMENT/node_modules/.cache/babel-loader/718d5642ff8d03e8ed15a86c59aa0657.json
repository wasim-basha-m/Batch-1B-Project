{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WasimBasha\\\\Desktop\\\\Repo\\\\Batch-1B-Project\\\\Front-End\\\\BANKING_MANAGEMENT\\\\src\\\\screens\\\\admin\\\\addCustomer.js\",\n    _s = $RefreshSig$();\n\nimport \"@material-ui/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Form, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCust } from \"../../actions/adminActions/adminActions.js\";\nimport { Redirect } from \"react-router-dom\"; // import React from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCustomer = props => {\n  _s();\n\n  const accountNumber1 = Math.floor(Math.random() * 900001) + 100002;\n  const [accountNumber, setAccountNumber] = useState(accountNumber1);\n  const [accountBalance, setAccountBalance] = useState(\"\");\n  const [cifNo, setCIFNo] = useState(\"\");\n  const [branchName, setBranchName] = useState(\"\");\n  const [ifscCode, setIfscCode] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const dispatch = useDispatch();\n  const adminAddCust = useSelector(store => store.adminAddCust);\n  const {\n    loading,\n    error,\n    response\n  } = adminAddCust;\n  toast.configure();\n\n  const clearForm = () => {\n    setAccountNumber(\"\");\n    setAccountBalance(\"\");\n    setCIFNo(\"\");\n    setBranchName(\"\");\n    setIfscCode(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setMobileNo(\"\");\n  };\n\n  const onaddCust = () => {\n    dispatch(addCust(accountNumber, accountBalance, cifNo, branchName, ifscCode, firstName, lastName, email, mobileNo));\n  };\n\n  useEffect(() => {\n    if (response && response === \"Successfully Added..!\") {\n      toast.success(\"Customer added successfully..!!    Please provide information to customer for Registration.\", {\n        autoClose: 10000\n      });\n      clearForm();\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/adminhome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this);\n    } else if (response && response.status === \"error\") {\n      toast.error(response.error, {\n        autoClose: 10000\n      });\n    } else if (error) {\n      // alert(\n      //   \"Error: Already have a customer with this data!!! please confirm details with customer\"\n      // );\n      toast.error(\"Already have a customer with this data!!!\", {\n        autoClose: 3000\n      });\n    }\n  }, [loading, error, response]);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Add New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Account Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              // onChange={(e) => {\n              //   setAccountNumber(e.target.value);\n              // }}\n              type: \"text\" // maxLength=\"10\"\n              ,\n              value: accountNumber,\n              readOnly: true,\n              placeholder: \"please enter numbers only\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setFirstName(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"20\",\n              value: firstName,\n              placeholder: \"please enter First Name only\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Account Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setAccountBalance(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"20\",\n              value: accountBalance,\n              placeholder: \"please enter amount in number\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setLastName(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"20\",\n              value: lastName,\n              placeholder: \"please enter Last Name only\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"CIF Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setCIFNo(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"11\",\n              value: cifNo,\n              placeholder: \"please enter 11 digit number\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              type: \"email\",\n              value: email,\n              placeholder: \"please enter Primary mail id: example@org.com\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Branch Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setBranchName(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"20\",\n              value: branchName,\n              placeholder: \"please enter branch name\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setMobileNo(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"10\",\n              value: mobileNo,\n              placeholder: \"please enter Primary mobile number\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"IFSC Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setIfscCode(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"11\",\n              value: ifscCode,\n              placeholder: \"please enter 11 character only\",\n              className: \"form-control bg-dark text-white\" //className={'bg-dark text-white'}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"reset\",\n          onClick: onaddCust,\n          size: \"md\",\n          className: \"btn btn-success\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), adminAddCust.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"waiting for response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCustomer, \"LD/6Q2Gnd5DZKKrr/xyjTog874o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddCustomer;\nexport default AddCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCustomer\");","map":{"version":3,"sources":["C:/Users/WasimBasha/Desktop/Repo/Batch-1B-Project/Front-End/BANKING_MANAGEMENT/src/screens/admin/addCustomer.js"],"names":["React","useState","useEffect","Card","Form","Col","Button","useDispatch","useSelector","addCust","Redirect","toast","AddCustomer","props","accountNumber1","Math","floor","random","accountNumber","setAccountNumber","accountBalance","setAccountBalance","cifNo","setCIFNo","branchName","setBranchName","ifscCode","setIfscCode","firstName","setFirstName","lastName","setLastName","email","setEmail","mobileNo","setMobileNo","dispatch","adminAddCust","store","loading","error","response","configure","clearForm","onaddCust","success","autoClose","status","e","target","value","textAlign"],"mappings":"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","sourcesContent":["import {} from \"@material-ui/icons\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Card, Form, Col, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCust } from \"../../actions/adminActions/adminActions.js\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst AddCustomer = (props) => {\r\n  const accountNumber1=Math.floor(Math.random()*900001) + 100002;\r\n  const [accountNumber, setAccountNumber] = useState(accountNumber1);\r\n  const [accountBalance, setAccountBalance] = useState(\"\");\r\n  const [cifNo, setCIFNo] = useState(\"\");\r\n  const [branchName, setBranchName] = useState(\"\");\r\n  const [ifscCode, setIfscCode] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobileNo, setMobileNo] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const adminAddCust = useSelector((store) => store.adminAddCust);\r\n  const { loading, error, response } = adminAddCust;\r\n  toast.configure();\r\n\r\n  const clearForm = () => {\r\n    setAccountNumber(\"\");\r\n    setAccountBalance(\"\");\r\n    setCIFNo(\"\");\r\n    setBranchName(\"\");\r\n    setIfscCode(\"\");\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setEmail(\"\");\r\n    setMobileNo(\"\");\r\n  };\r\n\r\n \r\n\r\n  const onaddCust = () => {\r\n    \r\n    dispatch(\r\n      addCust(\r\n        accountNumber,\r\n        accountBalance,\r\n        cifNo,\r\n        branchName,\r\n        ifscCode,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        mobileNo\r\n      )\r\n    );\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (response && response === \"Successfully Added..!\") {\r\n      \r\n      toast.success(\r\n        \"Customer added successfully..!!    Please provide information to customer for Registration.\",\r\n        { autoClose: 10000 }\r\n      );\r\n      clearForm();\r\n      <Redirect to=\"/adminhome\" />;\r\n    } else if (response && response.status === \"error\") {\r\n     \r\n      toast.error(response.error, {\r\n        autoClose: 10000,\r\n      });\r\n    } else if (error) {\r\n      // alert(\r\n      //   \"Error: Already have a customer with this data!!! please confirm details with customer\"\r\n      // );\r\n      toast.error(\"Already have a customer with this data!!!\", {\r\n        autoClose: 3000,\r\n      });\r\n    }\r\n  }, [loading, error, response]);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      <Card className={\"border border-dark bg-dark text-white\"}>\r\n        <Card.Header>Add New Customer</Card.Header>\r\n        <Card.Body>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Account Number</label>\r\n              <input\r\n                // onChange={(e) => {\r\n                //   setAccountNumber(e.target.value);\r\n\r\n                // }}\r\n\r\n                type=\"text\"\r\n                // maxLength=\"10\"\r\n                value={accountNumber}\r\n                readOnly\r\n                placeholder=\"please enter numbers only\"\r\n                className=\"form-control bg-dark text-white\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">First Name</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setFirstName(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"20\"\r\n                value={firstName}\r\n                placeholder=\"please enter First Name only\"\r\n                className=\"form-control bg-dark text-white\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Account Balance</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setAccountBalance(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"20\"\r\n                value={accountBalance}\r\n                placeholder=\"please enter amount in number\"\r\n                className=\"form-control bg-dark text-white\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Last Name</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setLastName(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"20\"\r\n                value={lastName}\r\n                placeholder=\"please enter Last Name only\"\r\n                className=\"form-control bg-dark text-white\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">CIF Number</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setCIFNo(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"11\"\r\n                value={cifNo}\r\n                placeholder=\"please enter 11 digit number\"\r\n                className=\"form-control bg-dark text-white\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">E-mail</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"please enter Primary mail id: example@org.com\"\r\n                className=\"form-control bg-dark text-white\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Branch Name</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setBranchName(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"20\"\r\n                value={branchName}\r\n                placeholder=\"please enter branch name\"\r\n                className=\"form-control bg-dark text-white\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Mobile Number</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setMobileNo(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"10\"\r\n                value={mobileNo}\r\n                placeholder=\"please enter Primary mobile number\"\r\n                className=\"form-control bg-dark text-white\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">IFSC Code</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setIfscCode(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"11\"\r\n                value={ifscCode}\r\n                placeholder=\"please enter 11 character only\"\r\n                className=\"form-control bg-dark text-white\"\r\n                //className={'bg-dark text-white'}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </Card.Body>\r\n        <Card.Footer style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            type=\"reset\"\r\n            onClick={onaddCust}\r\n            size=\"md\"\r\n            className=\"btn btn-success\"\r\n          >\r\n            ADD\r\n          </Button>\r\n        </Card.Footer>\r\n\r\n        {adminAddCust.loading && <div>waiting for response</div>}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCustomer;\r\n"]},"metadata":{},"sourceType":"module"}
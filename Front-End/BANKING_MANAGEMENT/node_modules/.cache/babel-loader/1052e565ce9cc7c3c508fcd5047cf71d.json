{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WasimBasha\\\\Desktop\\\\Repo\\\\Batch-1B-Project\\\\Front-End\\\\BANKING_MANAGEMENT\\\\src\\\\screens\\\\customers\\\\CustomerRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CustRegister } from \"../../actions/customerActions/customerAction.js\"; // import { Link } from 'react-router-dom'\n\nimport { Card, Form, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustRegs = props => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [branchName, setBranchName] = useState(\"\");\n  const [ifscCode, setIfsccode] = useState(\"\");\n  const dispatch = useDispatch();\n  const CustRegisterStore = useSelector(store => store.CustRegisterStore);\n  const {\n    loading,\n    error,\n    response\n  } = CustRegisterStore;\n  toast.configure();\n\n  const clearForm = () => {\n    setPassword(\"\");\n    setEmail(\"\");\n    setMobileNo(\"\");\n    setAccountNumber(\"\");\n    setBranchName(\"\");\n    setIfsccode(\"\");\n  };\n\n  const onRegister = () => {\n    dispatch(CustRegister(password, email, mobileNo, accountNumber, branchName, ifscCode));\n  };\n\n  useEffect(() => {\n    if (response && response === \"Registered Succesfully..!!\") {\n      // sessionStorage.setItem('token', response.data.token)\n      // alert(\n      //   \"Your Registration is successfully completed !! Please activate your account through your registered Email\"\n      // );\n      clearForm();\n      toast.success(\"Your Registration is Successfully Completed ..!! Please Activate your Account through your Registered Email\", {\n        autoClose: 10000\n      }); //<Redirect to=\"/custlogin\" />;\n\n      props.history.push(\"/custlogin\");\n    } else if (response && response.status === \"error\") {\n      alert(response.error);\n    } else if (error) {\n      //alert(\"Error: Please check that you have filled form correctly !!!\");\n      toast.error(\"Please check that you have filled form correctly !!!\", {\n        autoClose: 5000\n      });\n    }\n  }, [loading, error, response]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: \"skyblue\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Registration Form NetBanking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setPassword(e.target.value);\n              },\n              type: \"password\",\n              maxLength: \"8\",\n              placeholder: \"******\",\n              value: password,\n              className: \"form-control text-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              type: \"email\",\n              value: email,\n              placeholder: \"please enter Registered Email\",\n              className: \"form-control  text-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setMobileNo(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"10\",\n              value: mobileNo,\n              placeholder: \"please enter Registered mobile number\",\n              className: \"form-control  text-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Account Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setAccountNumber(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"10\",\n              value: accountNumber,\n              placeholder: \"please enter Account number given by Bank\",\n              className: \"form-control  text-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Branch Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setBranchName(e.target.value);\n              },\n              type: \"text\",\n              value: branchName,\n              maxLength: \"20\",\n              placeholder: \"please enter your Branch Name\",\n              className: \"form-control  text-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"IFSC Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setIfsccode(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"11\",\n              value: ifscCode,\n              placeholder: \"please enter your banks IFSC code\",\n              className: \"form-control  text-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onRegister,\n          size: \"md\",\n          className: \"btn btn-success\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"waiting for response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustRegs, \"urRmSUOgiOyXA8G8BoOPmrapBBI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CustRegs;\nexport default CustRegs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustRegs\");","map":{"version":3,"sources":["C:/Users/WasimBasha/Desktop/Repo/Batch-1B-Project/Front-End/BANKING_MANAGEMENT/src/screens/customers/CustomerRegister.js"],"names":["React","useEffect","useState","CustRegister","Card","Form","Col","Button","useDispatch","useSelector","Redirect","toast","CustRegs","props","password","setPassword","email","setEmail","mobileNo","setMobileNo","accountNumber","setAccountNumber","branchName","setBranchName","ifscCode","setIfsccode","dispatch","CustRegisterStore","store","loading","error","response","configure","clearForm","onRegister","success","autoClose","history","push","status","alert","backgroundColor","e","target","value","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,iDAA7B,C,CACA;;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,iBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMwB,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,iBAAiB,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACD,iBAAlB,CAArC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BJ,iBAArC;AACAhB,EAAAA,KAAK,CAACqB,SAAN;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBlB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAPD;;AASA,QAAMS,UAAU,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CACNvB,YAAY,CACVW,QADU,EAEVE,KAFU,EAGVE,QAHU,EAIVE,aAJU,EAKVE,UALU,EAMVE,QANU,CADN,CAAR;AAUD,GAXD;;AAaAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI8B,QAAQ,IAAIA,QAAQ,KAAK,4BAA7B,EAA2D;AACzD;AACA;AACA;AACA;AACAE,MAAAA,SAAS;AACTtB,MAAAA,KAAK,CAACwB,OAAN,CACE,6GADF,EAEE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFF,EANyD,CAUzD;;AACAvB,MAAAA,KAAK,CAACwB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD,KAZD,MAYO,IAAIP,QAAQ,IAAIA,QAAQ,CAACQ,MAAT,KAAoB,OAApC,EAA6C;AAClDC,MAAAA,KAAK,CAACT,QAAQ,CAACD,KAAV,CAAL;AACD,KAFM,MAEA,IAAIA,KAAJ,EAAW;AAChB;AACAnB,MAAAA,KAAK,CAACmB,KAAN,CAAY,sDAAZ,EAAoE;AAClEM,QAAAA,SAAS,EAAE;AADuD,OAApE;AAGD;AACF,GArBQ,EAqBN,CAACP,OAAD,EAAUC,KAAV,EAAiBC,QAAjB,CArBM,CAAT;AAuBA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACU,QAAAA,eAAe,EAAC;AAAjB,OAAb;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,GAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEnC,GAAhB;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,QAAQ,EAAGoC,CAAD,IAAO;AACf3B,gBAAAA,WAAW,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,eAHH;AAIE,cAAA,IAAI,EAAC,UAJP;AAKE,cAAA,SAAS,EAAC,GALZ;AAME,cAAA,WAAW,EAAC,QANd;AAOE,cAAA,KAAK,EAAE9B,QAPT;AAQE,cAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAER,GAAhB;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,QAAQ,EAAGoC,CAAD,IAAO;AACfzB,gBAAAA,QAAQ,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,eAHH;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,KAAK,EAAE5B,KALT;AAME,cAAA,WAAW,EAAC,+BANd;AAOE,cAAA,SAAS,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA6BE,QAAC,IAAD,CAAM,GAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEV,GAAhB;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,QAAQ,EAAGoC,CAAD,IAAO;AACfvB,gBAAAA,WAAW,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,eAHH;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,SAAS,EAAC,IALZ;AAME,cAAA,KAAK,EAAE1B,QANT;AAOE,cAAA,WAAW,EAAC,uCAPd;AAQE,cAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEZ,GAAhB;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,QAAQ,EAAGoC,CAAD,IAAO;AACfrB,gBAAAA,gBAAgB,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD,eAHH;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,SAAS,EAAC,IALZ;AAME,cAAA,KAAK,EAAExB,aANT;AAOE,cAAA,WAAW,EAAC,2CAPd;AAQE,cAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,eA0DE,QAAC,IAAD,CAAM,GAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEd,GAAhB;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,QAAQ,EAAGoC,CAAD,IAAO;AACfnB,gBAAAA,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,eAHH;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,KAAK,EAAEtB,UALT;AAME,cAAA,SAAS,EAAC,IANZ;AAOE,cAAA,WAAW,EAAC,+BAPd;AAQE,cAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEhB,GAAhB;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,QAAQ,EAAGoC,CAAD,IAAO;AACfjB,gBAAAA,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,eAHH;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,SAAS,EAAC,IALZ;AAME,cAAA,KAAK,EAAEpB,QANT;AAOE,cAAA,WAAW,EAAC,mCAPd;AAQE,cAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eA0FE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAAEqB,UAAAA,SAAS,EAAE;AAAb,SAApB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEX,UAAjB;AAA6B,UAAA,IAAI,EAAC,IAAlC;AAAuC,UAAA,SAAS,EAAC,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1FF,EAgGGL,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhGd,eAiGE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAjGF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2GD,CArKD;;GAAMjB,Q;UAQaJ,W,EACSC,W;;;KATtBG,Q;AAuKN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CustRegister } from \"../../actions/customerActions/customerAction.js\";\r\n// import { Link } from 'react-router-dom'\r\nimport { Card, Form, Col, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst CustRegs = (props) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobileNo, setMobileNo] = useState(\"\");\r\n  const [accountNumber, setAccountNumber] = useState(\"\");\r\n  const [branchName, setBranchName] = useState(\"\");\r\n  const [ifscCode, setIfsccode] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const CustRegisterStore = useSelector((store) => store.CustRegisterStore);\r\n  const { loading, error, response } = CustRegisterStore;\r\n  toast.configure();\r\n\r\n  const clearForm = () => {\r\n    setPassword(\"\");\r\n    setEmail(\"\");\r\n    setMobileNo(\"\");\r\n    setAccountNumber(\"\");\r\n    setBranchName(\"\");\r\n    setIfsccode(\"\");\r\n  };\r\n\r\n  const onRegister = () => {\r\n    dispatch(\r\n      CustRegister(\r\n        password,\r\n        email,\r\n        mobileNo,\r\n        accountNumber,\r\n        branchName,\r\n        ifscCode\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response && response === \"Registered Succesfully..!!\") {\r\n      // sessionStorage.setItem('token', response.data.token)\r\n      // alert(\r\n      //   \"Your Registration is successfully completed !! Please activate your account through your registered Email\"\r\n      // );\r\n      clearForm();\r\n      toast.success(\r\n        \"Your Registration is Successfully Completed ..!! Please Activate your Account through your Registered Email\",\r\n        { autoClose: 10000 }\r\n      );\r\n      //<Redirect to=\"/custlogin\" />;\r\n      props.history.push(\"/custlogin\");\r\n    } else if (response && response.status === \"error\") {\r\n      alert(response.error);\r\n    } else if (error) {\r\n      //alert(\"Error: Please check that you have filled form correctly !!!\");\r\n      toast.error(\"Please check that you have filled form correctly !!!\", {\r\n        autoClose: 5000,\r\n      });\r\n    }\r\n  }, [loading, error, response]);\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{backgroundColor:\"skyblue\"}}>\r\n        <Card.Header>Registration Form NetBanking</Card.Header>\r\n        <Card.Body>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Password</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n                type=\"password\"\r\n                maxLength=\"8\"\r\n                placeholder=\"******\"\r\n                value={password}\r\n                className=\"form-control text-dark\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"please enter Registered Email\"\r\n                className=\"form-control  text-dark\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Mobile Number</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setMobileNo(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"10\"\r\n                value={mobileNo}\r\n                placeholder=\"please enter Registered mobile number\"\r\n                className=\"form-control  text-dark\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Account Number</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setAccountNumber(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"10\"\r\n                value={accountNumber}\r\n                placeholder=\"please enter Account number given by Bank\"\r\n                className=\"form-control  text-dark\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">Branch Name</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setBranchName(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                value={branchName}\r\n                maxLength=\"20\"\r\n                placeholder=\"please enter your Branch Name\"\r\n                className=\"form-control  text-dark\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <label className=\"form-label\">IFSC Code</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setIfsccode(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                maxLength=\"11\"\r\n                value={ifscCode}\r\n                placeholder=\"please enter your banks IFSC code\"\r\n                className=\"form-control  text-dark\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </Card.Body>\r\n        <Card.Footer style={{ textAlign: \"right\" }}>\r\n          <Button onClick={onRegister} size=\"md\" className=\"btn btn-success\">\r\n            Register\r\n          </Button>\r\n        </Card.Footer>\r\n\r\n        {loading && <div>waiting for response</div>}\r\n        <div className=\"text-green\">\r\n         \r\n        </div>\r\n       \r\n      </Card>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustRegs;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WasimBasha\\\\Desktop\\\\Repo\\\\Batch-1B-Project\\\\Front-End\\\\BANKING_MANAGEMENT\\\\src\\\\screens\\\\customers\\\\ChangePass.js\",\n    _s = $RefreshSig$();\n\nimport { Container } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { CustChangePass } from \"../../actions/customerActions/customerAction.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePass = props => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [oldpassword, setOldPassword] = useState(\"\");\n  const [newpassword, setNewPassword] = useState(\"\");\n  const CustPassChange = useSelector(store => store.CustPassChange);\n  const {\n    loading,\n    error,\n    response\n  } = CustPassChange;\n  toast.configure();\n  const dispatch = useDispatch();\n  const cust = sessionStorage.getItem(\"customer\");\n  const customerId = JSON.parse(cust).customerId;\n\n  const clearForm = () => {\n    setPassword(\"\");\n  };\n\n  const onChange = customerId => {\n    dispatch(CustChangePass(customerId, password));\n  };\n\n  useEffect(() => {\n    if (response === \"successfully updated password!!!\") {\n      //  sessionStorage.setItem('token', response.data.token)\n      // props.history.push('/custhome')\n      // alert(\n      //   \"Success: Password changed successfully..!! Please Re-login with your new Password..!!\"\n      // );\n      clearForm();\n      toast.success(\"Password changed successfully..!! Please Re-login with your new Password..!!\", {\n        autoClose: 5000\n      });\n    } else if (response && response.status === \"error\") {\n      alert(response.error);\n    } else if (error) {\n      alert(error);\n    }\n  }, [loading, error, response]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-white\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-dark bg-white text-dark\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \" Old Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setOldPassword(e.target.value);\n              },\n              className: \"form-control\",\n              type: \"password\",\n              placeholder: \"********\",\n              maxLength: \"8\",\n              value: oldpassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \" New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setNewPassword(e.target.value);\n              },\n              className: \"form-control\",\n              type: \"password\",\n              placeholder: \"********\",\n              maxLength: \"8\",\n              value: newpassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \" Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setPassword(e.target.value);\n              },\n              className: \"form-control\",\n              type: \"password\",\n              placeholder: \"********\",\n              maxLength: \"8\",\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onChange(customerId);\n              },\n              className: \"btn btn-success float-right\",\n              children: \"Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangePass, \"wt1Ih9RnbLQJFU+gkPOf9+CcRX4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChangePass;\nexport default ChangePass;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePass\");","map":{"version":3,"sources":["C:/Users/WasimBasha/Desktop/Repo/Batch-1B-Project/Front-End/BANKING_MANAGEMENT/src/screens/customers/ChangePass.js"],"names":["Container","React","useEffect","useState","Card","CustChangePass","useDispatch","useSelector","Redirect","toast","ChangePass","props","password","setPassword","oldpassword","setOldPassword","newpassword","setNewPassword","CustPassChange","store","loading","error","response","configure","dispatch","cust","sessionStorage","getItem","customerId","JSON","parse","clearForm","onChange","success","autoClose","status","alert","e","target","value"],"mappings":"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","sourcesContent":["import { Container } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport { CustChangePass } from \"../../actions/customerActions/customerAction.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ChangePass = (props) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const[oldpassword, setOldPassword]=useState(\"\");\r\n  const[newpassword, setNewPassword]=useState(\"\");\r\n\r\n  const CustPassChange = useSelector((store) => store.CustPassChange);\r\n  const { loading, error, response } = CustPassChange;\r\n  toast.configure();\r\n\r\n  const dispatch = useDispatch();\r\n  const cust = sessionStorage.getItem(\"customer\");\r\n  const customerId = JSON.parse(cust).customerId;\r\n\r\n  const clearForm = () => {\r\n    setPassword(\"\");\r\n  };\r\n  const onChange = (customerId) => {\r\n    dispatch(CustChangePass(customerId, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response === \"successfully updated password!!!\") {\r\n      //  sessionStorage.setItem('token', response.data.token)\r\n      // props.history.push('/custhome')\r\n      // alert(\r\n      //   \"Success: Password changed successfully..!! Please Re-login with your new Password..!!\"\r\n      // );\r\n      clearForm();\r\n      toast.success(\r\n        \"Password changed successfully..!! Please Re-login with your new Password..!!\",\r\n        { autoClose: 5000 }\r\n      );\r\n    } else if (response && response.status === \"error\") {\r\n      alert(response.error);\r\n    } else if (error) {\r\n      alert(error);\r\n    }\r\n  }, [loading, error, response]);\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"text-white\">\r\n        <Card className={\"border border-dark bg-white text-dark\"}>\r\n          <Card.Header>Change Password</Card.Header>\r\n          <Card.Body>\r\n          <div className=\"mb-3\">\r\n              <label className=\"form-label\"> Old Password</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setOldPassword(e.target.value);\r\n                }}\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"********\"\r\n                maxLength=\"8\"\r\n                value={oldpassword}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\"> New Password</label>\r\n              <input\r\n              onChange={(e) => {\r\n                setNewPassword(e.target.value);\r\n              }}\r\n                \r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"********\"\r\n                maxLength=\"8\"\r\n                value={newpassword}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\"> Confirm New Password</label>\r\n              <input\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n                \r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"********\"\r\n                maxLength=\"8\"\r\n                value={password}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <button\r\n                onClick={() => {\r\n                  onChange(customerId);\r\n                }}\r\n                className=\"btn btn-success float-right\"\r\n              >\r\n                Change\r\n              </button>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      <div>\r\n        {/* <button>\r\n          <a className=\"btn btn-outline-secondary float-left\" href=\"/custhome\">\r\n            Profile\r\n          </a>\r\n        </button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePass;\r\n"]},"metadata":{},"sourceType":"module"}